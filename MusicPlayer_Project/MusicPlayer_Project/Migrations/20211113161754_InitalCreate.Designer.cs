// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicPlayer_Project.Data;

namespace MusicPlayer_Project.Migrations
{
    [DbContext(typeof(MusicPlayerContext))]
    [Migration("20211113161754_InitalCreate")]
    partial class InitalCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicPlayer_Project.Models.Album", b =>
                {
                    b.Property<int>("AlbumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlbumGenresAlbumGenreID")
                        .HasColumnType("int");

                    b.Property<int>("ArtistID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SongID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlbumID");

                    b.HasIndex("AlbumGenresAlbumGenreID");

                    b.HasIndex("SongID");

                    b.ToTable("Album","webApp");
                });

            modelBuilder.Entity("MusicPlayer_Project.Models.AlbumGenre", b =>
                {
                    b.Property<int>("AlbumGenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlbumID")
                        .HasColumnType("int");

                    b.Property<int>("GenreID")
                        .HasColumnType("int");

                    b.HasKey("AlbumGenreID");

                    b.ToTable("AlbumGenre","webApp");
                });

            modelBuilder.Entity("MusicPlayer_Project.Models.Artist", b =>
                {
                    b.Property<int>("ArtistID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AlbumsAlbumID")
                        .HasColumnType("int");

                    b.Property<int?>("ArtistSongsArtistSongID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtistID");

                    b.HasIndex("AlbumsAlbumID");

                    b.HasIndex("ArtistSongsArtistSongID");

                    b.ToTable("Artist","webApp");
                });

            modelBuilder.Entity("MusicPlayer_Project.Models.ArtistSong", b =>
                {
                    b.Property<int>("ArtistSongID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistID")
                        .HasColumnType("int");

                    b.Property<int>("SongID")
                        .HasColumnType("int");

                    b.HasKey("ArtistSongID");

                    b.ToTable("ArtistSong","webApp");
                });

            modelBuilder.Entity("MusicPlayer_Project.Models.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlbumGenresAlbumGenreID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SongGenresSongGenreID")
                        .HasColumnType("int");

                    b.HasKey("GenreID");

                    b.HasIndex("AlbumGenresAlbumGenreID");

                    b.HasIndex("SongGenresSongGenreID");

                    b.ToTable("Genre","webApp");
                });

            modelBuilder.Entity("MusicPlayer_Project.Models.Playlist", b =>
                {
                    b.Property<int>("PlaylistID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlaylistCollectionsPlaylistCollectionID")
                        .HasColumnType("int");

                    b.Property<int?>("PlaylistUsersPlaylistUserID")
                        .HasColumnType("int");

                    b.Property<int>("SongsInPlaylist")
                        .HasColumnType("int");

                    b.HasKey("PlaylistID");

                    b.HasIndex("PlaylistCollectionsPlaylistCollectionID");

                    b.HasIndex("PlaylistUsersPlaylistUserID");

                    b.ToTable("Playlist","webApp");
                });

            modelBuilder.Entity("MusicPlayer_Project.Models.PlaylistCollection", b =>
                {
                    b.Property<int>("PlaylistCollectionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PlaylistID")
                        .HasColumnType("int");

                    b.Property<int>("SongID")
                        .HasColumnType("int");

                    b.HasKey("PlaylistCollectionID");

                    b.ToTable("PlaylistCollection","webApp");
                });

            modelBuilder.Entity("MusicPlayer_Project.Models.PlaylistUser", b =>
                {
                    b.Property<int>("PlaylistUserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PlaylistID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("PlaylistUserID");

                    b.ToTable("PlaylistUser","webApp");
                });

            modelBuilder.Entity("MusicPlayer_Project.Models.Song", b =>
                {
                    b.Property<int>("SongID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArtistSongsArtistSongID")
                        .HasColumnType("int");

                    b.Property<int>("DurationSong")
                        .HasColumnType("int");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlaylistCollectionsPlaylistCollectionID")
                        .HasColumnType("int");

                    b.Property<int?>("SongGenresSongGenreID")
                        .HasColumnType("int");

                    b.HasKey("SongID");

                    b.HasIndex("ArtistSongsArtistSongID");

                    b.HasIndex("PlaylistCollectionsPlaylistCollectionID");

                    b.HasIndex("SongGenresSongGenreID");

                    b.ToTable("Song","webApp");
                });

            modelBuilder.Entity("MusicPlayer_Project.Models.SongGenre", b =>
                {
                    b.Property<int>("SongGenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GenreID")
                        .HasColumnType("int");

                    b.Property<int>("SongID")
                        .HasColumnType("int");

                    b.HasKey("SongGenreID");

                    b.ToTable("SongGenre","webApp");
                });

            modelBuilder.Entity("MusicPlayer_Project.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Joined")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlaylistUsersPlaylistUserID")
                        .HasColumnType("int");

                    b.Property<int?>("SongsSongID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("PlaylistUsersPlaylistUserID");

                    b.HasIndex("SongsSongID");

                    b.ToTable("User","webApp");
                });

            modelBuilder.Entity("MusicPlayer_Project.Models.Album", b =>
                {
                    b.HasOne("MusicPlayer_Project.Models.AlbumGenre", "AlbumGenres")
                        .WithMany("Albums")
                        .HasForeignKey("AlbumGenresAlbumGenreID");

                    b.HasOne("MusicPlayer_Project.Models.Song", "Songs")
                        .WithMany("Albums")
                        .HasForeignKey("SongID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MusicPlayer_Project.Models.Artist", b =>
                {
                    b.HasOne("MusicPlayer_Project.Models.Album", "Albums")
                        .WithMany("Artists")
                        .HasForeignKey("AlbumsAlbumID");

                    b.HasOne("MusicPlayer_Project.Models.ArtistSong", "ArtistSongs")
                        .WithMany("Artists")
                        .HasForeignKey("ArtistSongsArtistSongID");
                });

            modelBuilder.Entity("MusicPlayer_Project.Models.Genre", b =>
                {
                    b.HasOne("MusicPlayer_Project.Models.AlbumGenre", "AlbumGenres")
                        .WithMany("Genres")
                        .HasForeignKey("AlbumGenresAlbumGenreID");

                    b.HasOne("MusicPlayer_Project.Models.SongGenre", "SongGenres")
                        .WithMany("Genres")
                        .HasForeignKey("SongGenresSongGenreID");
                });

            modelBuilder.Entity("MusicPlayer_Project.Models.Playlist", b =>
                {
                    b.HasOne("MusicPlayer_Project.Models.PlaylistCollection", "PlaylistCollections")
                        .WithMany("Playlisst")
                        .HasForeignKey("PlaylistCollectionsPlaylistCollectionID");

                    b.HasOne("MusicPlayer_Project.Models.PlaylistUser", "PlaylistUsers")
                        .WithMany("Playlists")
                        .HasForeignKey("PlaylistUsersPlaylistUserID");
                });

            modelBuilder.Entity("MusicPlayer_Project.Models.Song", b =>
                {
                    b.HasOne("MusicPlayer_Project.Models.ArtistSong", "ArtistSongs")
                        .WithMany("Songs")
                        .HasForeignKey("ArtistSongsArtistSongID");

                    b.HasOne("MusicPlayer_Project.Models.PlaylistCollection", "PlaylistCollections")
                        .WithMany("Songs")
                        .HasForeignKey("PlaylistCollectionsPlaylistCollectionID");

                    b.HasOne("MusicPlayer_Project.Models.SongGenre", "SongGenres")
                        .WithMany("Songs")
                        .HasForeignKey("SongGenresSongGenreID");
                });

            modelBuilder.Entity("MusicPlayer_Project.Models.User", b =>
                {
                    b.HasOne("MusicPlayer_Project.Models.PlaylistUser", "PlaylistUsers")
                        .WithMany("Users")
                        .HasForeignKey("PlaylistUsersPlaylistUserID");

                    b.HasOne("MusicPlayer_Project.Models.Song", "Songs")
                        .WithMany("Users")
                        .HasForeignKey("SongsSongID");
                });
#pragma warning restore 612, 618
        }
    }
}
